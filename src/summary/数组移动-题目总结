----- 88. 合并两个有序数组
先把nums1的往后拷贝，然后再用归并排序
System.arraycopy(nums1, 0, nums1, nums1.length - m, m);


-------283.移动零
只要保证right在left后面，right不是0，left是0 就可以了
right每次都++，所以肯定比left快。找right的不为0就可以了。left不用找也就一次会触发一次自己交换，
后面都是把right的0换过来然后++left就一定是0
int left=0,right=0;
   while(right < nums.length){
       if(nums[right] != 0){
           swap(nums,left,right);
           ++left;
       }
   ++right;
}

-------剑指 Offer 21. 调整数组顺序使奇数位于偶数前面
while(right < nums.length){
   if (nums[right] % 2 != 0){
       swap(nums,left,right);
       ++left;
   }
   ++right;
}



---------26. 删除排序数组中的重复项
Map<Integer,Integer> map = new HashMap<>();
while(right < len){
    if (map.get(nums[right]) == null){
        map.put(nums[right],1);
        swap(nums,left,right);
        ++left;
    }
    ++right;
}
return left;


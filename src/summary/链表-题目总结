-----206.反转链表
定义prev，p，nex
prev是用来做p指向prev的
next是用来保存p.next快照的，指针改向左指后。prev先等于p，p=nex

-----21.合并两个有序链表
定义prev，p，nex     先new个p。 prev = p;  
p是用来移动指针的，nex是每次都new出来的保存P1或者P2的数据。
p.next = nex;
p = next;
返回prev.next;

-----141.环形链表
快慢指针
初始化
slow = head;
fast = head.next;
while(slow != fast){
  if(fast== null || fast.next ==null){
      return "无环";
  }
  slow=slow.next;
  fast=fast.next.next;
}
return "有环";


-----160. 相交链表
 ListNode p1 = headA;
 ListNode p2 = headB;
 while (p1 != p2) {
  //不用担心死循环，p1和p2一定会在交换后相等
  p1 = p1 != null ? p1.next : headB;
  p2 = p2 != null ? p2.next : headA;
 }
 return p1;  //如果p1==p2都为null，那返回null没有问题。 
 
 
-----剑指 Offer 22. 链表中倒数第k个节点
求倒数第K个， 定义fast让fast先走k步，slow留在head。这样slow和fast就相差k
此时slow和fast同时前进，等到fast为空，slow就是result


 
 -------234. 回文链表
 快慢指针求出中心点在哪，把start1,end1  start2,end2确定下来
 注意链表的奇偶，如果是奇数start2=end1.next.next;  如果是偶数就是start=end1.next;
 把start1 end1反转，这个简单
 然后两个链表就直接比较value，不用担心一个为空一个不为空
 
 
 
